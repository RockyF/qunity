{"version":3,"file":"index.umd.js","sources":["../src/Application.ts","../src/HashObject.ts","../src/Component.ts","../src/ComponentManager.ts","../src/EntityAdaptor.ts"],"sourcesContent":["/**\n * Created by rockyl on 2020-03-08.\n */\n\nimport {IEntityAdaptor} from \"./EntityAdaptor\";\nimport {Component} from \"./Component\";\nimport {IEntity} from \"./IEntity\";\n\nexport interface AdaptorOptions {\n\tstage: any;\n\tEntityAdaptor: any;\n\ttraverseFunc: (node, callback: (node) => boolean | void) => void;\n\tloadResourceFunc: (configs, onProgress?, onComplete?) => void;\n\tgetResFunc: (name) => any;\n}\n\n/**\n * 应用\n */\nexport class Application {\n\tprivate _options: AdaptorOptions;\n\tprivate _componentDefs: any = {};\n\tprivate _entityDefs: any = {};\n\n\t/**\n\t * 舞台实例\n\t */\n\tget stage() {\n\t\treturn this._options.stage;\n\t}\n\n\t/**\n\t * 装配适配器\n\t * @param options\n\t * @return mainLoop 主循环方法\n\t */\n\tsetupAdaptor(options: AdaptorOptions): (delta: number) => void {\n\t\tthis._options = options;\n\t\treturn this._mainLoop;\n\t}\n\n\t/**\n\t * 注册组件类\n\t * @param id\n\t * @param def\n\t */\n\tregisterComponentDef(id, def) {\n\t\tif (def) {\n\t\t\tdef['__class__'] = id;\n\t\t\tthis._componentDefs[id] = def;\n\t\t}\n\t}\n\n\t/**\n\t * 批量注册组件类\n\t * @param defs {key: id, def}\n\t */\n\tregisterComponentDefs(defs) {\n\t\tif (defs) {\n\t\t\tfor (let id in defs) {\n\t\t\t\tthis.registerComponentDef(id, defs[id]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * 注册实体类\n\t * @param type\n\t * @param def\n\t */\n\tregisterEntityDef(type, def) {\n\t\tif (def) {\n\t\t\tthis._entityDefs[type] = def;\n\t\t}\n\t}\n\n\t/**\n\t * 批量注册实体类\n\t * @param defs\n\t */\n\tregisterEntityDefs(defs) {\n\t\tif (defs) {\n\t\t\tfor (let type in defs) {\n\t\t\t\tthis.registerEntityDef(type, defs[type]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * 创建实体实例\n\t * @param type\n\t */\n\tcreateEntity(type: string): IEntity {\n\t\tlet clazz = this._entityDefs[type];\n\n\t\tif (clazz) {\n\t\t\tlet entity = new clazz();\n\t\t\tlet entityAdaptor = new this._options.EntityAdaptor(entity, this);\n\n\t\t\treturn entity;\n\t\t} else {\n\t\t\tthrow new Error(`type [${type}] not exists.`)\n\t\t}\n\t}\n\n\t/**\n\t * 加载资源\n\t * @param configs\n\t * @param onProgress\n\t * @param onComplete\n\t */\n\tloadResource(configs, onProgress?, onComplete?) {\n\t\tthis._options.loadResourceFunc(configs, onProgress, onComplete);\n\t}\n\n\t/**\n\t * 获取资源\n\t * @param name\n\t */\n\tgetRes(name): any {\n\t\treturn this._options.getResFunc(name);\n\t}\n\n\t/**\n\t * 主循环方法，需要在适配器的实现中调用\n\t * @param delta\n\t * @private\n\t */\n\tprivate _mainLoop = (delta: number) => {\n\t\tthis._options.traverseFunc(this._options.stage, this._onHit.bind(this, delta))\n\t};\n\n\t/**\n\t * 遍历整个渲染树\n\t * @param delta\n\t * @param node\n\t * @private\n\t */\n\tprivate _onHit(delta, node) {\n\t\tif (node['entityAdaptor']) {\n\t\t\tlet entityAdaptor: IEntityAdaptor = node['entityAdaptor'];\n\t\t\tentityAdaptor.invokeLifecycle('update', delta);\n\t\t}\n\t}\n\n\t/**\n\t * 实例化组件\n\t * @param id\n\t */\n\t$getComponentDef(id: any): any {\n\t\tlet def;\n\t\tlet idType = typeof id;\n\t\tswitch (idType) {\n\t\t\tcase 'string':\n\t\t\t\tdef = this._componentDefs[id];\n\t\t\t\tbreak;\n\t\t\tcase 'function':\n\t\t\t\tdef = id;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (!def) {\n\t\t\tconsole.warn(`component [${id}] not exists.`);\n\t\t\treturn;\n\t\t}\n\t\tconst className = def['__class__'];\n\t\tif(!className){\n\t\t\tconsole.warn(`component [${id}] is not registered.`);\n\t\t\treturn;\n\t\t}\n\n\t\treturn def;\n\t}\n}\n","/**\n * Created by rockyl on 2018/11/5.\n */\n\nlet HASH_CODE_INK: number = 0;\n\nfunction getHashCode() {\n\treturn ++HASH_CODE_INK;\n}\n\n/**\n * 哈希对象\n */\nexport class HashObject {\n\tprivate _hashCode: number;\n\n\tconstructor() {\n\t\tthis._hashCode = getHashCode();\n\t}\n\n\tget hashCode(): number {\n\t\treturn this._hashCode;\n\t}\n}\n","/**\n * Created by rockyl on 2019-07-28.\n */\n\nimport {HashObject} from \"./HashObject\";\nimport {IEntityAdaptor} from \"./EntityAdaptor\";\n\nexport interface IComponent{\n\treadonly entityAdaptor:IEntityAdaptor;\n\treadonly entity:any;\n\tenabled: boolean;\n\n\tonAwake();\n\tonEnable();\n\tonDisable();\n\tonUpdate(t: number);\n\tafterUpdate(t: number);\n\tonDestroy();\n}\n\n/**\n * 组件类\n */\nexport class Component extends HashObject implements IComponent{\n\tprivate _entityAdaptor: IEntityAdaptor;\n\tprivate _enabled: boolean = true;\n\n\tget entityAdaptor(): IEntityAdaptor {\n\t\treturn this._entityAdaptor;\n\t}\n\n\tget entity(): any {\n\t\treturn this._entityAdaptor.entity;\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\n\t}\n\n\t/**\n\t * 是否有效\n\t */\n\tget enabled(): boolean {\n\t\treturn this._enabled;\n\t}\n\n\tset enabled(value: boolean) {\n\t\tif (this._enabled != value) {\n\t\t\tthis._enabled = value;\n\n\t\t\tif (this._entityAdaptor && this._entityAdaptor.isActive) {\n\t\t\t\tif (value) {\n\t\t\t\t\tthis.onEnable();\n\t\t\t\t} else {\n\t\t\t\t\tthis.onDisable();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\t$awake(entityAdaptor: IEntityAdaptor) {\n\t\tthis._entityAdaptor = entityAdaptor;\n\t\tthis.onAwake();\n\t}\n\n\t/**\n\t * @private\n\t */\n\t$destroy() {\n\t\tthis._entityAdaptor = null;\n\t\tthis.onDestroy();\n\t}\n\n\t/**\n\t * 当组件被唤醒时\n\t */\n\tonAwake() {\n\n\t}\n\n\t/**\n\t * 当生效时\n\t * 仅当实体唤醒状态\n\t */\n\tonEnable() {\n\n\t}\n\n\t/**\n\t * 当失效时\n\t * 仅当实体唤醒状态\n\t */\n\tonDisable() {\n\n\t}\n\n\t/**\n\t * 时钟更新\n\t * @param t\n\t */\n\tonUpdate(t: number) {\n\n\t}\n\n\t/**\n\t * 时钟更新回溯\n\t * @param t\n\t */\n\tafterUpdate(t: number) {\n\n\t}\n\n\t/**\n\t * 当被销毁时\n\t */\n\tonDestroy() {\n\n\t}\n\n\t/**\n\t * @private\n\t * @param t\n\t */\n\t$onUpdate(t: number) {\n\t\tif (this._enabled) {\n\t\t\tthis.onUpdate(t);\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @param t\n\t */\n\t$afterUpdate(t: number) {\n\t\tif (this._enabled) {\n\t\t\tthis.afterUpdate(t);\n\t\t}\n\t}\n}\n","/**\n * Created by rockyl on 2019-07-29.\n */\n\nimport {Component} from \"./Component\";\nimport {IEntityAdaptor} from \"./EntityAdaptor\";\nimport {Application} from \"./Application\";\n\n/**\n * 组件管理类\n */\nexport class ComponentManager {\n\tprivate _app: Application;\n\tprivate _entityAdaptor: IEntityAdaptor;\n\tprivate _components: Component[] = [];\n\tprivate _componentsNameMapping: any;\n\tprivate _componentsDefMapping: any;\n\n\tconstructor(IEntityAdaptor: IEntityAdaptor, app: Application) {\n\t\tthis._app = app;\n\t\tthis._entityAdaptor = IEntityAdaptor;\n\n\t\tthis.applyProxy();\n\t}\n\n\tapplyProxy() {\n\t\tlet entity = this._entityAdaptor.entity;\n\n\t\tentity.addComponent = (componentId: string | Function) => {\n\t\t\tthis.addComponent(componentId);\n\t\t};\n\t\tentity.removeComponent = (componentId: string | Function, index?: number) => {\n\t\t\tthis.removeComponent(componentId, index);\n\t\t};\n\t\tentity.removeAllComponents = () => {\n\t\t\tthis.removeAllComponents();\n\t\t};\n\t\tentity.getComponent = (componentId: string | Function) => {\n\t\t\treturn this.getComponent(componentId);\n\t\t};\n\t\tentity.getComponents = (componentId: string | Function) => {\n\t\t\treturn this.getComponents(componentId);\n\t\t};\n\t}\n\n\t/**\n\t * 遍历组件\n\t * @param callback\n\t */\n\teachComponent(callback: (component: Component, index: number) => unknown) {\n\t\tthis._components.some(<any>callback);\n\t}\n\n\t/**\n\t * 时钟更新\n\t * @param t\n\t */\n\tonUpdate(t: number) {\n\t\tthis.eachComponent(component => {\n\t\t\tcomponent.$onUpdate(t);\n\t\t})\n\t}\n\n\t/**\n\t * 时钟更新回溯\n\t * @param t\n\t */\n\tafterUpdate(t: number) {\n\t\tthis.eachComponent(component => {\n\t\t\tcomponent.$afterUpdate(t);\n\t\t})\n\t}\n\n\t/**\n\t * 添加组件\n\t * @param componentId\n\t */\n\taddComponent(componentId: any) {\n\t\tlet component = this.$instantiateComponent(componentId);\n\t\tif (!component) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._add(component)\n\t}\n\n\t/**\n\t * 移除组件\n\t * @param componentId\n\t * @param index\n\t */\n\tremoveComponent(componentId: any, index?: number) {\n\t\tlet components;\n\t\tswitch(typeof componentId){\n\t\t\tcase 'string':\n\t\t\t\tcomponents = this._findByName(componentId);\n\t\t\t\tbreak;\n\t\t\tcase 'function':\n\t\t\t\tcomponents = this._find(componentId);\n\t\t\t\tbreak;\n\t\t}\n\t\tif (index !== undefined) {\n\t\t\tcomponents = [components[index]];\n\t\t}\n\n\t\tthis._remove(components);\n\t}\n\n\t/**\n\t * 移除所有组件\n\t */\n\tremoveAllComponents(){\n\t\tthis._removeAll();\n\t}\n\n\t/**\n\t * 获取组件\n\t * @param componentId\n\t */\n\tgetComponent(componentId){\n\t\tswitch(typeof componentId){\n\t\t\tcase 'string':\n\t\t\t\treturn this._getByName(componentId);\n\t\t\tcase 'function':\n\t\t\t\treturn this._getOne(componentId);\n\t\t}\n\t}\n\n\t/**\n\t * 获取组件组\n\t * @param componentId\n\t */\n\tgetComponents(componentId){\n\t\tswitch(typeof componentId){\n\t\t\tcase 'string':\n\t\t\t\treturn this._findByName(componentId);\n\t\t\tcase 'function':\n\t\t\t\treturn this._find(componentId);\n\t\t}\n\t}\n\n\t/**\n\t * 添加组件\n\t * @param component\n\t * @param index\n\t */\n\tprivate _add(component: Component, index?: number) {\n\n\t\tif (index == undefined || index < 0 || index >= this._components.length) {\n\t\t\tindex = this._components.length;\n\t\t}\n\n\t\tif (component.entityAdaptor == this._entityAdaptor) {\n\t\t\tindex--;\n\t\t}\n\n\t\tconst currentIndex = this._components.indexOf(component);\n\t\tif (currentIndex == index) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (currentIndex >= 0) {\n\t\t\tthis._components.splice(currentIndex, 1);\n\t\t}\n\t\tthis._components.splice(index, 0, component);\n\n\t\tif (currentIndex < 0) {\n\t\t\tthis.onAddComponent(component);\n\t\t}\n\t}\n\n\t/**\n\t * 移除组件\n\t * @param components\n\t */\n\tprivate _remove(components) {\n\t\tfor (let component of components) {\n\t\t\tif (component) {\n\t\t\t\tthis.onRemoveComponent(component);\n\t\t\t\tconst index = this._components.indexOf(component);\n\t\t\t\tthis._components.splice(index, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * 移除所有组件\n\t */\n\tprivate _removeAll() {\n\t\twhile (this._components.length > 0) {\n\t\t\tconst component = this._components.shift();\n\t\t\tthis.onRemoveComponent(component);\n\t\t}\n\t}\n\n\t/**\n\t * 根据组件名称获取指定类的组件列表\n\t * @param componentId\n\t */\n\tprivate _findByName<T extends Component>(componentId: string): T[] {\n\t\tlet components = this._componentsNameMapping[componentId];\n\t\tif (!components) {\n\t\t\tcomponents = this._componentsNameMapping[componentId] = <T[]>this._components.filter((component: Component) => {\n\t\t\t\treturn component.constructor['__class__'] === componentId;\n\t\t\t});\n\t\t}\n\t\treturn components;\n\t}\n\n\t/**\n\t * 获取指定类的组件列表\n\t * @param clazz\n\t */\n\tprivate _find<T extends Component>(clazz: new() => T): T[] {\n\t\tlet components = this._componentsDefMapping[clazz.name];\n\t\tif (!components) {\n\t\t\tcomponents = this._componentsDefMapping[clazz.name] = <T[]>this._components.filter((component: Component) => {\n\t\t\t\treturn component instanceof clazz;\n\t\t\t});\n\t\t}\n\t\treturn components;\n\t}\n\n\t/**\n\t * 获取指定类的组件\n\t * @param name\n\t */\n\tprivate _getByName<T extends Component>(name: string): T {\n\t\treturn this._findByName<T>(name)[0];\n\t}\n\n\t/**\n\t * 获取指定类的组件\n\t * @param clazz\n\t */\n\tprivate _getOne<T extends Component>(clazz: new() => T): T {\n\t\treturn this._find<T>(clazz)[0];\n\t}\n\n\t/**\n\t * 获取所有组件\n\t */\n\tprivate get all(): Component[] {\n\t\treturn this._components;\n\t}\n\n\t/**\n\t * 当添加组件时\n\t * @param component\n\t */\n\tprivate onAddComponent(component: Component) {\n\t\tthis._componentsNameMapping = {};\n\t\tthis._componentsDefMapping = {};\n\n\t\tcomponent.$awake(this._entityAdaptor);\n\t}\n\n\t/**\n\t * 当移除组件时\n\t * @param component\n\t */\n\tprivate onRemoveComponent(component: Component) {\n\t\tthis._componentsNameMapping = {};\n\t\tthis._componentsDefMapping = {};\n\n\t\tcomponent.$destroy();\n\t}\n\n\t$instantiateComponent(componentId: any): Component {\n\t\tlet def = this._app.$getComponentDef(componentId);\n\t\treturn new def;\n\t}\n}\n","/**\n * Created by rockyl on 2020-03-07.\n */\n\nimport {ComponentManager} from \"./ComponentManager\";\nimport {Application} from \"./Application\";\n\n/**\n * 实体适配器接口\n */\nexport interface IEntityAdaptor {\n\t/**\n\t * 组件管理实例\n\t */\n\treadonly entity: any;\n\t/**\n\t * 实体\n\t */\n\treadonly components: ComponentManager;\n\t/**\n\t * 是否激活\n\t */\n\treadonly isActive: boolean;\n\n\tinvokeLifecycle(type: string, ...args);\n}\n\n/**\n * 实体适配器基类\n */\nexport abstract class EntityAdaptorBase implements IEntityAdaptor {\n\tprivate readonly _components: ComponentManager;\n\tprivate readonly _entity: any;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget components(): ComponentManager {\n\t\treturn this._components;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget entity() {\n\t\treturn this._entity;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tabstract get isActive():boolean;\n\n\tconstructor(entity: any, app: Application) {\n\t\tthis._entity = entity;\n\t\tthis._components = new ComponentManager(this, app);\n\n\t\tentity.entityAdaptor = this;\n\t}\n\n\t/**\n\t * 触发声明周期方法\n\t * @param type\n\t * @param args\n\t */\n\tinvokeLifecycle(type: string, ...args) {\n\t\tswitch (type) {\n\t\t\tcase 'update':\n\t\t\t\tconst [delta] = args;\n\t\t\t\tthis._components.onUpdate(delta);\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n"],"names":["tslib_1.__extends"],"mappings":"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"}